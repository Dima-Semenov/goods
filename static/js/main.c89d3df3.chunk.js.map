{"version":3,"sources":["api.jsx","Components/CurrentGood/CurrentGood.jsx","Components/Loader/Loader.jsx","Components/ModalWindow/ModalWindow.jsx","Components/GoodsList/GoodsList.jsx","App.jsx","index.js"],"names":["getInfo","fetch","then","response","ok","json","status","statusText","CurrentGood","good","setIsOpen","setData","className","category","name","price","type","onClick","Loader","ModalWindow","data","reset","useState","queryName","setQueryName","queryNumber","setQueryNumber","isNameCorrect","setIsNameCorrect","isNumberCorrect","setIsNumberCorrect","isLengthCorrect","setIsLengthCorrect","onSubmit","event","preventDefault","console","log","Name","Number","classNames","length","placeholder","value","onChange","target","onBlur","match","required","maxLength","GoodsList","isOpenWindow","setIsOpenWindow","windowData","setWindowData","map","item","id","min","i","App","useEffect","result","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c89d3df3.chunk.js","sourcesContent":["const MAIN_URL = 'https://run.mocky.io/v3/b7d36eea-0b3f-414a-ba44-711b5f5e528e';\n\nconst request = () => {\n  return fetch(`${MAIN_URL}`)\n    .then(response => {\n      if (response.ok) {\n\n        return response.json();\n      }\n\n    // eslint-disable-next-line no-throw-literal\n    throw `${response.status} - ${response.statusText}`\n  });\n};\n\nexport const getInfo = () => {\n  return request();\n}","import React from 'react';\nimport '../CurrentGood/currentGood.scss';\nimport PropTypes from 'prop-types';\n\nexport const CurrentGood = ({good, setIsOpen, setData}) => {\n\n  return (\n    <div className=\"good\">\n      <p className=\"good__category\">{good.category}</p>\n      <h3 className=\"good__name\">{good.name}</h3>\n\n      <div className=\"good__container\">\n        <p className=\"good__price\">\n          <span className=\"good__icon\">$</span>\n          {good.price}\n        </p>\n        <button\n          type=\"button\"\n          className=\"good__button\"\n          onClick={() => {\n            setIsOpen(true)\n            setData(good)\n          }}\n        >\n          buy\n        </button>\n      </div>\n    </div>\n  );\n}\n\nCurrentGood.propTypes = {\n  good: PropTypes.shape({\n      category: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n    }).isRequired,\n  setIsOpen: PropTypes.func.isRequired,\n  setData: PropTypes.func.isRequired,\n}\n","import React from 'react';\nimport '../Loader/loader.scss';\n\nexport const Loader = () => (\n  <div className=\"lds-default\">\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n);\n","import React, { useState } from 'react';\nimport '../ModalWindow/modalWindow.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const ModalWindow = ({data, reset}) => {\n  const [queryName, setQueryName] = useState('');\n  const [queryNumber, setQueryNumber] = useState('');\n  const [isNameCorrect, setIsNameCorrect] = useState(false);\n  const [isNumberCorrect, setIsNumberCorrect] = useState(false);\n  const [isLengthCorrect, setIsLengthCorrect] = useState(false);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if(!isNameCorrect && !isNumberCorrect && !isLengthCorrect) {\n      console.log({\n        Name: queryName,\n        Number: queryNumber,\n      })\n      setQueryName('');\n      setQueryNumber('');\n    }\n  }\n\n  const handleChangeName = (event) => {\n    setQueryName(event.target.value);\n\n    setIsNameCorrect(false);\n  }\n\n  const handleBlurName = () => {\n    const regexString = /^[A-Za-z\\s]+$/;\n\n    if(!queryName.match(regexString)) {\n      setIsNameCorrect(true);\n    }\n  }\n\n  const handleChangeNumber = (event) => {\n    setQueryNumber(event.target.value);\n\n    setIsNumberCorrect(false);\n    setIsLengthCorrect(false);\n  }\n\n  const handleBlurNumber = () => {\n    const regexNumber = /^[0-9]*$/;\n\n    if(!queryNumber.match(regexNumber)) {\n      setIsNumberCorrect(true);\n    }\n\n    if(queryNumber.length !== 12) {\n      setIsLengthCorrect(true)\n    }\n  }\n\n  return (\n    <div className=\"window\">\n      <div className=\"window__container\">\n        <button\n          type=\"button\"\n          className=\"window__button\"\n          onClick={() => reset(false)}\n        >\n          X\n        </button>\n\n        <div className=\"window__info\">\n          <p className=\"window__category\">{data.category}</p>\n          <h3 className=\"window__name\">{data.name}</h3>\n          <p className=\"window__price\">\n            <span className=\"window__icon\">$</span>\n            {data.price}\n          </p>\n        </div>\n\n        <div className=\"window__submit\">\n          <form\n            onSubmit={handleSubmit}\n            className=\"window__form\"\n          >\n            <input\n              type=\"text\"\n              className={classNames(\n                'window__input',\n                {\n                  'window__input-error': isNameCorrect,\n                  'window__input-correct': !isNameCorrect && queryName.length,\n                }\n              )}\n              placeholder=\"Name\"\n              value={queryName}\n              onChange={handleChangeName}\n              onBlur={handleBlurName}\n              required\n            />\n            {isNameCorrect && (\n              <p className=\"window__error\">Only letters allowed</p>\n            )}\n            <input\n              type=\"tel\"\n              className={classNames(\n                'window__input',\n                {\n                  'window__input-error': isNumberCorrect || isLengthCorrect,\n                  'window__input-correct': !isNumberCorrect && !isLengthCorrect && queryNumber,\n                }\n              )}\n              placeholder=\"Number\"\n              value={queryNumber}\n              onChange={handleChangeNumber}\n              onBlur={handleBlurNumber}\n              maxLength='12'\n              required\n            />\n            {isNumberCorrect && (\n              <p className=\"window__error\">Only numbers allowed</p>\n            )}\n            {isLengthCorrect && (\n              <p className=\"window__error\">\n                Should contain 12 characters\n                {' '}\n                {queryNumber.length}/12\n              </p>\n            )\n            }\n            <button\n              type=\"submit\"\n              className=\"window__order\"\n            >\n              Order\n            </button>\n          </form>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nModalWindow.propTypes = {\n  data: PropTypes.shape({\n      category: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n    }).isRequired,\n    reset: PropTypes.func.isRequired,\n}\n","import React, { useState } from 'react';\nimport { CurrentGood } from '../CurrentGood/CurrentGood';\nimport '../GoodsList/goodsList.scss';\nimport { Loader } from '../Loader/Loader';\nimport { ModalWindow } from '../ModalWindow/ModalWindow';\nimport PropTypes from 'prop-types';\n\nexport const GoodsList = ({data}) => {\n  const [isOpenWindow, setIsOpenWindow] = useState(false);\n  const [windowData, setWindowData] = useState(null);\n\n  const minValue = () => {\n    let min = data[0].price;\n\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].price < min) {\n        min = data[i].price;\n        setWindowData(data[i]);\n      }\n    }\n    setIsOpenWindow(true);\n  }\n\n  if (data.length === 0) {\n    return (\n      <Loader />\n    );\n  }\n\n  return (\n    <>\n      {isOpenWindow && <ModalWindow data={windowData} reset={setIsOpenWindow} />}\n      <div className=\"goods\">\n        {\n          data.map(item => (\n            <CurrentGood\n              key={item.id}\n              good={item}\n              setIsOpen={setIsOpenWindow}\n              setData={setWindowData}\n            />\n          ))\n        }\n      </div>\n      <button\n        type=\"button\"\n        className=\"goods__button\"\n        onClick={minValue}\n      >\n        Buy cheapest\n      </button>\n    </>\n  );\n}\n\nGoodsList.propTypes = {\n  data: PropTypes.array.isRequired,\n}","import React, { useEffect, useState } from 'react';\nimport { getInfo } from './api';\nimport './App.scss';\nimport { GoodsList } from './Components/GoodsList/GoodsList';\n\nexport function App() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    getInfo()\n      .then(result => setData(\n        result.map((item, index) => ({\n            ...item,\n            id: index + 1,\n          })\n        )\n      ));\n\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <GoodsList data={data} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}